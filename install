#!/bin/sh

cd "$(dirname "$0")"
DOTDIR=$(pwd)

_all=yes
_link=
_shell=
_external=
while	case "$#,$1" in
	0,*  | *,--)		break ;;
	*,-l | *,--link)	_all= ; _link=yes ;;
	*,-s | *,--shell)	_all= ; _shell=yes ;;
	*,-e | *,--external)	_all= ; _external=yes ;;
	esac
do
	shift
done

test -n "$_all$_external" &&
git submodule update --init || :

# There's a bug in stow --dotfiles
# When the dot-dir already exists.
# https://lists.gnu.org/archive/html/bug-stow/2020-05/msg00000.html
# Roll my own
find home -type d |
	sed -n "s,home/,$HOME/.,p" |
	xargs mkdir -p
mkdir -p ~/bin

# stow --ignore='\.sw.' --dotfiles -t "$HOME" home
# stow --ignore='\.sw.' -t "$HOME/bin" bin

mksupervise() {
	if test ! -L "$HOME/.local/service/$2/supervise"; then
		ln -s "/run/x-user/$USER/runit/supervise.$1" \
			"$HOME/.local/service/$2/supervise"
	fi
}

mklink() {
	ln -sf "$DOTDIR/$1" "$HOME/$2"
}

do_link() {
	for _src in home/local/service/*; do
		_target=".${_src#home/}"
		_sv=${_src##*/}
		if test -f "$_src/log/run"; then
			mksupervise "$_sv-log" "$_sv/log"
			mklink "$_src/log/run" "$_target/log"
		fi
		mksupervise "$_sv" "$_sv"
		for _file in "$_src"/*; do
			case "$_file" in
			*/run|*/log) ;;
			*/down) : >"$HOME/$_target/down" ;;
			*)	mklink "$_file" "$_target" ;;
			esac
		done
		mklink "$_src/run" "$_target"
	done

	find home -path home/local/service -prune \
		-o -name '*.sw?' -prune \
		-o -type f -print \
		-o -type l -print |
	while read -r _src; do
		_target=".${_src#home/}"
		if test -L "$_src"; then
			cp "$_src" "$HOME/$_target"
		elif test -f "$_src"; then
			ln -sf "$DOTDIR/$_src" "$HOME/$_target"
		fi
	done
}

cat_if_exist() {
	test -f "$1" && cat "$1"
}

merge_bashrc() {
	cat 00-setup.sh \
		80-alias-core-util.sh \
		80-alias-misc.sh \
		80-functions.sh \
		90-prompt.bash \
		91-prefer-tui-browser.sh \
		93-xlibc.sh \
		99-cowsay.sh
	cat_if_exist local.sh
	cat_if_exist local.bash
}

merge_zshrc() {
	cat 00-prof.zsh \
		00-setup.sh \
		01-setup.zsh \
		10-setopt.zsh \
		20-variables.zsh \
		30-modules.zsh \
		40-autoload-functions.zsh \
		40-autoload-functions.zsh \
		70-key-binding.zsh \
		70-alias-grml.zsh \
		70-zle-grml.zsh \
		80-alias-core-util.sh \
		80-alias-misc.sh \
		80-functions.sh \
		80-functions.zsh \
		80-functions-grml.zsh \
		90-completion.zsh \
		91-pass.zsh \
		91-prefer-tui-browser.sh \
		91-term-title.zsh
	cat_if_exist "92-prompt-battery.$(uname -s).zsh"
	cat 92-theme.zsh 93-xlibc.sh
	sed "s,[\$]DOTFILES,$DOTDIR," 98-bundle.zsh.in
	cat 99-cowsay.sh
	cat_if_exist local.sh
	cat_if_exist local.zsh
}

mk_rc() {
	cd sh
	if command -v bash >/dev/null 2>&1; then
		merge_bashrc >"$HOME/.bashrc"
	fi
	if command -v zsh >/dev/null 2>&1; then
		merge_zshrc >"$HOME/.zshrc"
		zsh -c "zcompile $HOME/.zshrc"
	fi
}

test -n "$_all$_link" && do_link
test -n "$_all$_shell" && mk_rc
